{"version":3,"sources":["scripts/main.js"],"names":["wall","document","querySelector","spider","styleWall","getComputedStyle","border","parseFloat","styleSpider","widthSpider","width","heightSpider","height","addEventListener","e","target","classList","contains","wallLeft","getBoundingClientRect","left","wallTop","top","wallRight","right","wallBottom","bottom","leftSp","clientX","topSp","clientY","style"],"mappings":";AAAA,aAEA,IAAMA,EAAOC,SAASC,cAAc,SAC9BC,EAASF,SAASC,cAAc,WAEhCE,EAAYC,iBAAiBL,GAC7BM,EAASC,WAAWH,EAAUE,QAE9BE,EAAcH,iBAAiBF,GAC/BM,EAAcF,WAAWC,EAAYE,OACrCC,EAAeJ,WAAWC,EAAYI,QAE5CX,SAASY,iBAAiB,QAAS,SAAAC,GAC7BA,GAAAA,EAAEC,OAAOC,UAAUC,SAAS,QAAS,CACjCC,IAAAA,EAAWlB,EAAKmB,wBAAwBC,KACxCC,EAAUrB,EAAKmB,wBAAwBG,IACvCC,EAAYvB,EAAKmB,wBAAwBK,MACzCC,EAAazB,EAAKmB,wBAAwBO,OAE1CC,EAASb,EAAEc,QAAUV,EAAWT,EAAc,EAAIH,EAClDuB,EAAQf,EAAEgB,QAAUT,EAAUV,EAAe,EAAIL,EAEnDuB,EAAQ,EACV1B,EAAO4B,MAAMT,IAAM,MACVR,EAAEgB,SAAWrB,EAAc,EAAIH,GAAUmB,EAClDtB,EAAO4B,MAAMT,IAAMG,EAAaJ,EAAUZ,EAAuB,EAATH,EAAa,KAErEH,EAAO4B,MAAMT,IAAMO,EAAQ,KAGzBF,EAAS,EACXxB,EAAO4B,MAAMX,KAAO,MACXN,EAAEc,SAAWjB,EAAe,EAAIL,GAAUiB,EACnDpB,EAAO4B,MAAMX,KAAOG,EAChBL,EAAWP,EAAwB,EAATL,EAAa,KAE3CH,EAAO4B,MAAMX,KAAOO,EAAS","file":"main.286a3ce7.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst wall = document.querySelector('.wall');\nconst spider = document.querySelector('.spider');\n\nconst styleWall = getComputedStyle(wall);\nconst border = parseFloat(styleWall.border);\n\nconst styleSpider = getComputedStyle(spider);\nconst widthSpider = parseFloat(styleSpider.width);\nconst heightSpider = parseFloat(styleSpider.height);\n\ndocument.addEventListener('click', e => {\n  if (e.target.classList.contains('wall')) {\n    const wallLeft = wall.getBoundingClientRect().left;\n    const wallTop = wall.getBoundingClientRect().top;\n    const wallRight = wall.getBoundingClientRect().right;\n    const wallBottom = wall.getBoundingClientRect().bottom;\n\n    const leftSp = e.clientX - wallLeft - widthSpider / 2 - border;\n    const topSp = e.clientY - wallTop - heightSpider / 2 - border;\n\n    if (topSp < 0) {\n      spider.style.top = '0px';\n    } else if (e.clientY + (widthSpider / 2 + border) > wallBottom) {\n      spider.style.top = wallBottom - wallTop - widthSpider - border * 2 + 'px';\n    } else {\n      spider.style.top = topSp + 'px';\n    }\n\n    if (leftSp < 0) {\n      spider.style.left = '0px';\n    } else if (e.clientX + (heightSpider / 2 + border) > wallRight) {\n      spider.style.left = wallRight\n        - wallLeft - heightSpider - border * 2 + 'px';\n    } else {\n      spider.style.left = leftSp + 'px';\n    }\n  }\n});\n"]}